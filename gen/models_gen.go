// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package gen

import (
	"fmt"
	"io"
	"strconv"
	"time"
)

type _Entity interface {
	Is_Entity()
}

type SurveyAnswerFilterType struct {
	And           []*SurveyAnswerFilterType `json:"AND"`
	Or            []*SurveyAnswerFilterType `json:"OR"`
	ID            *string                   `json:"id"`
	IDNe          *string                   `json:"id_ne"`
	IDGt          *string                   `json:"id_gt"`
	IDLt          *string                   `json:"id_lt"`
	IDGte         *string                   `json:"id_gte"`
	IDLte         *string                   `json:"id_lte"`
	IDIn          []string                  `json:"id_in"`
	IDNull        *bool                     `json:"id_null"`
	Completed     *bool                     `json:"completed"`
	CompletedNe   *bool                     `json:"completed_ne"`
	CompletedGt   *bool                     `json:"completed_gt"`
	CompletedLt   *bool                     `json:"completed_lt"`
	CompletedGte  *bool                     `json:"completed_gte"`
	CompletedLte  *bool                     `json:"completed_lte"`
	CompletedIn   []bool                    `json:"completed_in"`
	CompletedNull *bool                     `json:"completed_null"`
	Content       *string                   `json:"content"`
	ContentNe     *string                   `json:"content_ne"`
	ContentGt     *string                   `json:"content_gt"`
	ContentLt     *string                   `json:"content_lt"`
	ContentGte    *string                   `json:"content_gte"`
	ContentLte    *string                   `json:"content_lte"`
	ContentIn     []string                  `json:"content_in"`
	ContentLike   *string                   `json:"content_like"`
	ContentPrefix *string                   `json:"content_prefix"`
	ContentSuffix *string                   `json:"content_suffix"`
	ContentNull   *bool                     `json:"content_null"`
	SurveyID      *string                   `json:"surveyId"`
	SurveyIDNe    *string                   `json:"surveyId_ne"`
	SurveyIDGt    *string                   `json:"surveyId_gt"`
	SurveyIDLt    *string                   `json:"surveyId_lt"`
	SurveyIDGte   *string                   `json:"surveyId_gte"`
	SurveyIDLte   *string                   `json:"surveyId_lte"`
	SurveyIDIn    []string                  `json:"surveyId_in"`
	SurveyIDNull  *bool                     `json:"surveyId_null"`
	UpdatedAt     *time.Time                `json:"updatedAt"`
	UpdatedAtNe   *time.Time                `json:"updatedAt_ne"`
	UpdatedAtGt   *time.Time                `json:"updatedAt_gt"`
	UpdatedAtLt   *time.Time                `json:"updatedAt_lt"`
	UpdatedAtGte  *time.Time                `json:"updatedAt_gte"`
	UpdatedAtLte  *time.Time                `json:"updatedAt_lte"`
	UpdatedAtIn   []*time.Time              `json:"updatedAt_in"`
	UpdatedAtNull *bool                     `json:"updatedAt_null"`
	CreatedAt     *time.Time                `json:"createdAt"`
	CreatedAtNe   *time.Time                `json:"createdAt_ne"`
	CreatedAtGt   *time.Time                `json:"createdAt_gt"`
	CreatedAtLt   *time.Time                `json:"createdAt_lt"`
	CreatedAtGte  *time.Time                `json:"createdAt_gte"`
	CreatedAtLte  *time.Time                `json:"createdAt_lte"`
	CreatedAtIn   []*time.Time              `json:"createdAt_in"`
	CreatedAtNull *bool                     `json:"createdAt_null"`
	UpdatedBy     *string                   `json:"updatedBy"`
	UpdatedByNe   *string                   `json:"updatedBy_ne"`
	UpdatedByGt   *string                   `json:"updatedBy_gt"`
	UpdatedByLt   *string                   `json:"updatedBy_lt"`
	UpdatedByGte  *string                   `json:"updatedBy_gte"`
	UpdatedByLte  *string                   `json:"updatedBy_lte"`
	UpdatedByIn   []string                  `json:"updatedBy_in"`
	UpdatedByNull *bool                     `json:"updatedBy_null"`
	CreatedBy     *string                   `json:"createdBy"`
	CreatedByNe   *string                   `json:"createdBy_ne"`
	CreatedByGt   *string                   `json:"createdBy_gt"`
	CreatedByLt   *string                   `json:"createdBy_lt"`
	CreatedByGte  *string                   `json:"createdBy_gte"`
	CreatedByLte  *string                   `json:"createdBy_lte"`
	CreatedByIn   []string                  `json:"createdBy_in"`
	CreatedByNull *bool                     `json:"createdBy_null"`
	Survey        *SurveyFilterType         `json:"survey"`
}

type SurveyAnswerSortType struct {
	ID        *ObjectSortType `json:"id"`
	Completed *ObjectSortType `json:"completed"`
	Content   *ObjectSortType `json:"content"`
	SurveyID  *ObjectSortType `json:"surveyId"`
	UpdatedAt *ObjectSortType `json:"updatedAt"`
	CreatedAt *ObjectSortType `json:"createdAt"`
	UpdatedBy *ObjectSortType `json:"updatedBy"`
	CreatedBy *ObjectSortType `json:"createdBy"`
	Survey    *SurveySortType `json:"survey"`
}

type SurveyExport struct {
	Items []*SurveyExportItem `json:"items"`
}

type SurveyExportField struct {
	Key   string  `json:"key"`
	Title *string `json:"title"`
}

type SurveyExportFilterType struct {
	SurveyID  *string  `json:"surveyID"`
	AnswerIDs []string `json:"answerIDs"`
}

type SurveyExportItem struct {
	Survey *Survey              `json:"survey"`
	Fields []*SurveyExportField `json:"fields"`
	Rows   []*SurveyExportRow   `json:"rows"`
}

type SurveyExportRow struct {
	Answer *SurveyAnswer        `json:"answer"`
	Values []*SurveyExportValue `json:"values"`
}

type SurveyExportValue struct {
	Key   string  `json:"key"`
	Value *string `json:"value"`
}

type SurveyFilterType struct {
	And           []*SurveyFilterType     `json:"AND"`
	Or            []*SurveyFilterType     `json:"OR"`
	ID            *string                 `json:"id"`
	IDNe          *string                 `json:"id_ne"`
	IDGt          *string                 `json:"id_gt"`
	IDLt          *string                 `json:"id_lt"`
	IDGte         *string                 `json:"id_gte"`
	IDLte         *string                 `json:"id_lte"`
	IDIn          []string                `json:"id_in"`
	IDNull        *bool                   `json:"id_null"`
	Name          *string                 `json:"name"`
	NameNe        *string                 `json:"name_ne"`
	NameGt        *string                 `json:"name_gt"`
	NameLt        *string                 `json:"name_lt"`
	NameGte       *string                 `json:"name_gte"`
	NameLte       *string                 `json:"name_lte"`
	NameIn        []string                `json:"name_in"`
	NameLike      *string                 `json:"name_like"`
	NamePrefix    *string                 `json:"name_prefix"`
	NameSuffix    *string                 `json:"name_suffix"`
	NameNull      *bool                   `json:"name_null"`
	Content       *string                 `json:"content"`
	ContentNe     *string                 `json:"content_ne"`
	ContentGt     *string                 `json:"content_gt"`
	ContentLt     *string                 `json:"content_lt"`
	ContentGte    *string                 `json:"content_gte"`
	ContentLte    *string                 `json:"content_lte"`
	ContentIn     []string                `json:"content_in"`
	ContentLike   *string                 `json:"content_like"`
	ContentPrefix *string                 `json:"content_prefix"`
	ContentSuffix *string                 `json:"content_suffix"`
	ContentNull   *bool                   `json:"content_null"`
	UpdatedAt     *time.Time              `json:"updatedAt"`
	UpdatedAtNe   *time.Time              `json:"updatedAt_ne"`
	UpdatedAtGt   *time.Time              `json:"updatedAt_gt"`
	UpdatedAtLt   *time.Time              `json:"updatedAt_lt"`
	UpdatedAtGte  *time.Time              `json:"updatedAt_gte"`
	UpdatedAtLte  *time.Time              `json:"updatedAt_lte"`
	UpdatedAtIn   []*time.Time            `json:"updatedAt_in"`
	UpdatedAtNull *bool                   `json:"updatedAt_null"`
	CreatedAt     *time.Time              `json:"createdAt"`
	CreatedAtNe   *time.Time              `json:"createdAt_ne"`
	CreatedAtGt   *time.Time              `json:"createdAt_gt"`
	CreatedAtLt   *time.Time              `json:"createdAt_lt"`
	CreatedAtGte  *time.Time              `json:"createdAt_gte"`
	CreatedAtLte  *time.Time              `json:"createdAt_lte"`
	CreatedAtIn   []*time.Time            `json:"createdAt_in"`
	CreatedAtNull *bool                   `json:"createdAt_null"`
	UpdatedBy     *string                 `json:"updatedBy"`
	UpdatedByNe   *string                 `json:"updatedBy_ne"`
	UpdatedByGt   *string                 `json:"updatedBy_gt"`
	UpdatedByLt   *string                 `json:"updatedBy_lt"`
	UpdatedByGte  *string                 `json:"updatedBy_gte"`
	UpdatedByLte  *string                 `json:"updatedBy_lte"`
	UpdatedByIn   []string                `json:"updatedBy_in"`
	UpdatedByNull *bool                   `json:"updatedBy_null"`
	CreatedBy     *string                 `json:"createdBy"`
	CreatedByNe   *string                 `json:"createdBy_ne"`
	CreatedByGt   *string                 `json:"createdBy_gt"`
	CreatedByLt   *string                 `json:"createdBy_lt"`
	CreatedByGte  *string                 `json:"createdBy_gte"`
	CreatedByLte  *string                 `json:"createdBy_lte"`
	CreatedByIn   []string                `json:"createdBy_in"`
	CreatedByNull *bool                   `json:"createdBy_null"`
	Answers       *SurveyAnswerFilterType `json:"answers"`
}

type SurveySortType struct {
	ID         *ObjectSortType       `json:"id"`
	Name       *ObjectSortType       `json:"name"`
	Content    *ObjectSortType       `json:"content"`
	UpdatedAt  *ObjectSortType       `json:"updatedAt"`
	CreatedAt  *ObjectSortType       `json:"createdAt"`
	UpdatedBy  *ObjectSortType       `json:"updatedBy"`
	CreatedBy  *ObjectSortType       `json:"createdBy"`
	AnswersIds *ObjectSortType       `json:"answersIds"`
	Answers    *SurveyAnswerSortType `json:"answers"`
}

type _Service struct {
	Sdl *string `json:"sdl"`
}

type ObjectSortType string

const (
	ObjectSortTypeAsc  ObjectSortType = "ASC"
	ObjectSortTypeDesc ObjectSortType = "DESC"
)

var AllObjectSortType = []ObjectSortType{
	ObjectSortTypeAsc,
	ObjectSortTypeDesc,
}

func (e ObjectSortType) IsValid() bool {
	switch e {
	case ObjectSortTypeAsc, ObjectSortTypeDesc:
		return true
	}
	return false
}

func (e ObjectSortType) String() string {
	return string(e)
}

func (e *ObjectSortType) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = ObjectSortType(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid ObjectSortType", str)
	}
	return nil
}

func (e ObjectSortType) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
